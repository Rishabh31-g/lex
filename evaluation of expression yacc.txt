%{
#include <stdio.h>
#include <stdlib.h>

void yyerror(const char *s);
int yylex(void);

%}

%union {
    int num;
}

%token <num> NUM
%token '+' '-' '*' '/' '(' ')'

%type <num> expression term factor

%%
program:
    expression '\n' { printf("Result = %d\n", $1); }
    ;

expression:
    term               { $$ = $1; }
    | expression '+' term   { $$ = $1 + $3; }
    | expression '-' term   { $$ = $1 - $3; }
    ;

term:
    factor             { $$ = $1; }
    | term '*' factor  { $$ = $1 * $3; }
    | term '/' factor  { $$ = $1 / $3; }
    ;

factor:
    NUM                { $$ = $1; }
    | '(' expression ')' { $$ = $2; }
    ;

%%

void yyerror(const char *s) {
    fprintf(stderr, "Error: %s\n", s);
}

int main(void) {
    printf("Enter an expression: ");
    yyparse();
    return 0;
}
